{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Humayun\\\\OneDrive\\\\Documents\\\\new-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar initState = {\n  todos: [],\n  text: \"\"\n};\nexport var addTodo = function addTodo() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"PERSIST_TODOS\":\n      var todos = JSON.parse(window.localStorage.getItem(\"todos2\"));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: todos ? todos : []\n      });\n\n    case \"ADD_TEXT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        text: action.payload\n      });\n\n    case \"ADD_TODO\":\n      var todos2 = state.todos.concat(action.payload);\n      window.localStorage.setItem(\"todos2\", JSON.stringify(todos2));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: todos2,\n        text: \"\"\n      });\n\n    case \"EDIT_TODO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        text: state.todos[action.payload],\n        selected: action.payload\n      });\n\n    case \"EDIT_ADD_TODO\":\n      var todo4 = state.todos.map(function (todo, i) {\n        return i !== action.payload.selected ? todo : action.payload.value;\n      });\n      setPersist(todo4);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: todo4,\n        selected: undefined,\n        text: \"\"\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Humayun/OneDrive/Documents/new-project/src/redux/reducer/addTodo.reducer.js"],"names":["initState","todos","text","addTodo","state","action","type","JSON","parse","window","localStorage","getItem","payload","todos2","concat","setItem","stringify","selected","todo4","map","todo","i","value","setPersist","undefined"],"mappings":";AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,IAAI,EAAE;AAFU,CAAlB;AAMA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,UAAML,KAAK,GAAGM,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAAX,CAAd;AACA,6CAAYP,KAAZ;AAAmBH,QAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW;AAA1C;;AACF,SAAK,UAAL;AACE,6CAAYG,KAAZ;AAAmBF,QAAAA,IAAI,EAAEG,MAAM,CAACO;AAAhC;;AACF,SAAK,UAAL;AACE,UAAMC,MAAM,GAAGT,KAAK,CAACH,KAAN,CAAYa,MAAZ,CAAmBT,MAAM,CAACO,OAA1B,CAAf;AACAH,MAAAA,MAAM,CAACC,YAAP,CAAoBK,OAApB,CAA4B,QAA5B,EAAsCR,IAAI,CAACS,SAAL,CAAeH,MAAf,CAAtC;AACA,6CAAYT,KAAZ;AAAmBH,QAAAA,KAAK,EAAEY,MAA1B;AAAkCX,QAAAA,IAAI,EAAE;AAAxC;;AACA,SAAK,WAAL;AACE,6CACKE,KADL;AAEEF,QAAAA,IAAI,EAAEE,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACO,OAAnB,CAFR;AAGEK,QAAAA,QAAQ,EAAEZ,MAAM,CAACO;AAHnB;;AAKF,SAAK,eAAL;AACE,UAAMM,KAAK,GAAGd,KAAK,CAACH,KAAN,CAAYkB,GAAZ,CAAgB,UAACC,IAAD,EAAOC,CAAP;AAAA,eAC5BA,CAAC,KAAKhB,MAAM,CAACO,OAAP,CAAeK,QAArB,GAAgCG,IAAhC,GAAuCf,MAAM,CAACO,OAAP,CAAeU,KAD1B;AAAA,OAAhB,CAAd;AAGAC,MAAAA,UAAU,CAACL,KAAD,CAAV;AACA,6CACKd,KADL;AAEEH,QAAAA,KAAK,EAAEiB,KAFT;AAGED,QAAAA,QAAQ,EAAEO,SAHZ;AAIEtB,QAAAA,IAAI,EAAE;AAJR;;AAMF;AACE,aAAOE,KAAP;AA5BN;AA8BC,CA/BI","sourcesContent":["\r\nconst initState = {\r\n  todos: [],\r\n  text: \"\",\r\n  \r\n};\r\n\r\nexport const addTodo = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"PERSIST_TODOS\":\r\n      const todos = JSON.parse(window.localStorage.getItem(\"todos2\"));\r\n      return { ...state, todos: todos ? todos : [] };\r\n    case \"ADD_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"ADD_TODO\":\r\n      const todos2 = state.todos.concat(action.payload);\r\n      window.localStorage.setItem(\"todos2\", JSON.stringify(todos2));\r\n      return { ...state, todos: todos2, text: \"\" };\r\n      case \"EDIT_TODO\":\r\n        return {\r\n          ...state,\r\n          text: state.todos[action.payload],\r\n          selected: action.payload\r\n        };\r\n      case \"EDIT_ADD_TODO\":\r\n        const todo4 = state.todos.map((todo, i) =>\r\n          i !== action.payload.selected ? todo : action.payload.value\r\n        );\r\n        setPersist(todo4);\r\n        return {\r\n          ...state,\r\n          todos: todo4,\r\n          selected: undefined,\r\n          text: \"\"\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}